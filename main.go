package main

import (
	"encoding/json"
	"encoding/xml"
	"fmt"
	"io/ioutil"
	"log"
	"net/http"
	"time"
)

func main() {

	fmt.Println("hello")
	resp, err := http.Get("https://medium.com/feed/@warrensbox")

	if err != nil {
		log.Fatal(err)
	}
	defer resp.Body.Close()
	body, _ := ioutil.ReadAll(resp.Body)
	data := &Rss{}
	err = xml.Unmarshal(body, data)
	json, _ := json.Marshal(data)
	fmt.Println(string(json))
	fmt.Sprintf("%s", string(json))

}

type AutoGenerated struct {
	Rss struct {
		Channel struct {
			Title struct {
				Cdata string `json:"__cdata"`
			} `json:"title"`
			Description struct {
				Cdata string `json:"__cdata"`
			} `json:"description"`
			Link  []interface{} `json:"link"`
			Image struct {
				URL   string   `json:"url"`
				Title string   `json:"title"`
				Link  []string `json:"link"`
			} `json:"image"`
			Generator     string `json:"generator"`
			LastBuildDate string `json:"lastBuildDate"`
			WebMaster     struct {
				Cdata string `json:"__cdata"`
			} `json:"webMaster"`
			Item []struct {
				Title struct {
					Cdata string `json:"__cdata"`
				} `json:"title"`
				Link []string `json:"link"`
				GUID struct {
					IsPermaLink string `json:"_isPermaLink"`
					Text        string `json:"__text"`
				} `json:"guid"`
				Category []struct {
					Cdata string `json:"__cdata"`
				} `json:"category"`
				Creator struct {
					Cdata string `json:"__cdata"`
				} `json:"creator"`
				PubDate string `json:"pubDate"`
				Updated struct {
					Text time.Time `json:"__text"`
				} `json:"updated"`
				Encoded struct {
					Cdata string `json:"__cdata"`
				} `json:"encoded"`
			} `json:"item"`
		} `json:"channel"`
		XmlnsDc      string `json:"_xmlns:dc"`
		XmlnsContent string `json:"_xmlns:content"`
		XmlnsAtom    string `json:"_xmlns:atom"`
		XmlnsCc      string `json:"_xmlns:cc"`
		Version      string `json:"_version"`
	} `json:"rss"`
}

type Rss struct {
	XMLName xml.Name `xml:"rss"`
	Text    string   `xml:",chardata"`
	Dc      string   `xml:"dc,attr"`
	Content string   `xml:"content,attr"`
	Atom    string   `xml:"atom,attr"`
	Version string   `xml:"version,attr"`
	Cc      string   `xml:"cc,attr"`
	Channel struct {
		Text        string `xml:",chardata"`
		Title       string `xml:"title"`
		Description string `xml:"description"`
		Link        struct {
			Text string `xml:",chardata"`
			Href string `xml:"href,attr"`
			Rel  string `xml:"rel,attr"`
			Type string `xml:"type,attr"`
		} `xml:"link"`
		Image struct {
			Text  string `xml:",chardata"`
			URL   string `xml:"url"`
			Title string `xml:"title"`
			Link  string `xml:"link"`
		} `xml:"image"`
		Generator     string `xml:"generator"`
		LastBuildDate string `xml:"lastBuildDate"`
		WebMaster     string `xml:"webMaster"`
		Item          []struct {
			Text  string `xml:",chardata"`
			Title string `xml:"title"`
			Link  string `xml:"link"`
			Guid  struct {
				Text        string `xml:",chardata"`
				IsPermaLink string `xml:"isPermaLink,attr"`
			} `xml:"guid"`
			Category []string `xml:"category"`
			Creator  string   `xml:"creator"`
			PubDate  string   `xml:"pubDate"`
			Updated  string   `xml:"updated"`
			Encoded  string   `xml:"encoded"`
		} `xml:"item"`
	} `xml:"channel"`
}
